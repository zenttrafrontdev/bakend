plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.amarilo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory:4.2.0'

	compileOnly "org.flywaydb:flyway-mysql"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2:2.1.214'
}

jacoco {
	toolVersion = "0.8.8"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/build/reports/jacoco/jacocoReport.html")
		xml.destination file("${buildDir}/build/reports/jacoco/jacocoReport.xml")
	}
	dependsOn test
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			excludes = ['com.amarilo.msobligacionesfinancieras.domain.dto.*',
						'com.amarilo.msobligacionesfinancieras.domain.mapper.*',
						'com.amarilo.msobligacionesfinancieras.infraestructure.*']
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				maximum = 0.7
			}
		}
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
